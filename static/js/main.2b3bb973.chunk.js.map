{"version":3,"sources":["component/Weather.jsx","component/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["minMaxTemp","min","max","className","Weather","props","city","temp_celsius","temp_min","temp_max","description","form","error","role","onSubmit","loadWeather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","setState","sys","celsius","calCelsius","main","temp","weather","state","undefined","Math","floor","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b3bb973.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container text-light\">\r\n        <div className=\"cards pt-4\">\r\n          <h1>{props.city}</h1>\r\n          {props.temp_celsius ? (\r\n            <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\r\n          ) : null}\r\n        </div>\r\n        {minMaxTemp(props.temp_min, props.temp_max)}\r\n        <h5 className=\"py-3\">{props.description}</h5>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nfunction minMaxTemp(min, max) {\r\n  if (min && max) {\r\n    return (\r\n      <h3>\r\n        <span className=\"px-4\">{min}&deg;</span>\r\n        <span className=\"px-4\">{max}&deg;</span>\r\n      </h3>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst form = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"\">{props.error ? error() : null}</div>\r\n      <form onSubmit={props.loadWeather}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 offset-md-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"city\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"country\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n            <button className=\"btn btn-warning\">Get weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nfunction error() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n        please enter correct city and country\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default form;\r\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport Weather from \"./component/Weather\";\nimport Form from \"./component/Form\";\n\nconst API_key = \"19bc7c8c16bb27f9c37cb022e0955c26\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n      );\n      const response = await api_call.json();\n      this.setState({\n        city: `${response.name},${response.sys.country}`,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n      });\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <center>\n          <Form loadWeather={this.getWeather} error={this.state.error} />\n          <Weather\n            city={this.state.city}\n            country={this.state.country}\n            temp_celsius={this.state.celsius}\n            temp_max={this.state.temp_max}\n            temp_min={this.state.temp_min}\n            description={this.state.description}\n          />\n        </center>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// additional;\n// Bootstrap;\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}